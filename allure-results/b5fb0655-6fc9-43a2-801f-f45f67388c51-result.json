{"name": "test_sidebar_menu_items", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.all_text_contents: Target page, context or browser has been closed", "trace": "page = <Page url='https://rak-wbg.gamechange.dev/'>\n\n    def test_sidebar_menu_items(page):\n        dashboard = DashboardPage(page)\n>       assert dashboard.verify_sidebar_items([\"Dashboard\", \"ARM\", \"Pipeline\", \"Portfolio\", \"Task Board\", \"Account Planning\", \"Companies\", \"Threads\"]), \"Sidebar items missing or incorrect.\"\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_dashboard.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\DashboardPage.py:28: in verify_sidebar_items\n    sidebar_text = self.page.locator(\"nav\").all_text_contents()\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:17916: in all_text_contents\n    return mapping.from_maybe_impl(self._sync(self._impl_obj.all_text_contents()))\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:683: in all_text_contents\n    return await self._frame.eval_on_selector_all(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:463: in eval_on_selector_all\n    await self._channel.send(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001E0357120F0>, cb = <function Channel.send.<locals>.<lambda> at 0x000001E035973380>\nis_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Locator.all_text_contents: Target page, context or browser has been closed\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TargetClosedError"}, "start": 1753449936886, "stop": 1753449936898, "uuid": "d3ca7273-150d-4680-86a7-c25279473e6e", "historyId": "e208315f8fd669907cff5408ab49d0db", "testCaseId": "e208315f8fd669907cff5408ab49d0db", "fullName": "tests.test_dashboard#test_sidebar_menu_items", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_dashboard"}, {"name": "host", "value": "LAPTOP-DLCP2JCN"}, {"name": "thread", "value": "18292-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_dashboard"}], "titlePath": ["tests", "test_dashboard.py"]}