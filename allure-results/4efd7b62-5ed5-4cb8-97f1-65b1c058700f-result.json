{"name": "test_aria_labels_present", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Locator.count: Target page, context or browser has been closed", "trace": "page = <Page url='about:blank'>\n\n    def test_aria_labels_present(page):\n        pipeline = PipelinePage(page)\n>       assert pipeline.verify_aria_labels(), \"ARIA labels missing for accessibility.\"\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\ntests\\test_pipeline.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\pipeline_page.py:129: in verify_aria_labels\n    return self.page.locator(\"[aria-label]\").count() > 0\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:16757: in count\n    return mapping.from_maybe_impl(self._sync(self._impl_obj.count()))\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:406: in count\n    return await self._frame._query_count(self._selector)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:136: in _query_count\n    return await self._channel.send(\"queryCount\", None, {\"selector\": selector})\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x0000014D8F3942F0>, cb = <function Channel.send.<locals>.<lambda> at 0x0000014D8F32E160>\nis_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Locator.count: Target page, context or browser has been closed\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TargetClosedError"}, "start": 1753367825775, "stop": 1753367825782, "uuid": "e407ea4c-b062-4ace-9803-911e239197da", "historyId": "329db1561afe8be7150da3d46d9e67f5", "testCaseId": "329db1561afe8be7150da3d46d9e67f5", "fullName": "tests.test_pipeline#test_aria_labels_present", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_pipeline"}, {"name": "host", "value": "LAPTOP-DLCP2JCN"}, {"name": "thread", "value": "7228-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_pipeline"}], "titlePath": ["tests", "test_pipeline.py"]}