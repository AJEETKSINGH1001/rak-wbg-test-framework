{"name": "test_column_task_count", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.text_content: Timeout 30000ms exceeded.\nCall log:\n  - waiting for locator(\"div:has-text('To-Do') span.badge\")", "trace": "page = <Page url='https://rak-wbg.gamechange.dev/scrumboard/kanban'>\n\n    def test_column_task_count(page):\n        taskboard = TaskBoardPage(page)\n        taskboard.visit(Config.TASKBOARD_URL)\n>       count = taskboard.get_column_task_count(\"To-Do\")\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTest_taskboard.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\TaskBoard_page.py:49: in get_column_task_count\n    count = self.page.locator(self.COLUMN_COUNT(column)).text_content()\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:17715: in text_content\n    self._sync(self._impl_obj.text_content(timeout=timeout))\n..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_locator.py:629: in text_content\n    return await self._frame.text_content(\n..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:688: in text_content\n    return await self._channel.send(\n..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x00000234B43A88F0>\ncb = <function Channel.send.<locals>.<lambda> at 0x00000234B4938360>\nis_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.text_content: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for locator(\"div:has-text('To-Do') span.badge\")\n\n..\\.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TimeoutError"}, "start": 1753444392538, "stop": 1753444423176, "uuid": "291beed2-c3ce-4a11-8854-1aeab31fa024", "historyId": "6abc1e24585e2da8a63e1fc9067b4eee", "testCaseId": "6abc1e24585e2da8a63e1fc9067b4eee", "fullName": "tests.Test_taskboard#test_column_task_count", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "Test_taskboard"}, {"name": "host", "value": "LAPTOP-DLCP2JCN"}, {"name": "thread", "value": "23160-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Test_taskboard"}], "titlePath": ["tests", "Test_taskboard.py"]}